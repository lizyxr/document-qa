import sys
import math

def main():
    import sys
    import sys
    input = sys.stdin.read
    data = input().split()
    T = int(data[0])
    Ns = list(map(int, data[1:T+1]))
    max_N = max(Ns) if T >0 else 0
    N_MAX = max(max_N, 2)
    
    sieve = bytearray([1]) * (N_MAX +1)
    sieve[0:2] = b'\x00\x00'
    for p in range(2, int(math.isqrt(N_MAX)) +1):
        if sieve[p]:
            sieve[p*p : N_MAX +1 : p] = b'\x00' * len(sieve[p*p : N_MAX +1 : p])
    
    twins_count = [0] * (N_MAX +1)
    count =0
    for n in range(1, N_MAX +1):
        twins_count[n] = twins_count[n-1]
        if n >=3 and sieve[n] and sieve[n-2]:
            twins_count[n] +=1
    
    for i in range(1, T+1):
        N = Ns[i-1]
        if N >=3 and twins_count[N] >=1:
            result = twins_count[N] +1
        else:
            result = 0
        print(f"Case #{i}: {result}")

if __name__ == "__main__":
    main()